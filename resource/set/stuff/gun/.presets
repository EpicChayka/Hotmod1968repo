{curve "gun_std"}	;// Refers to ballistic.set


;/*============================== Speeds / Muzzle Velocity ==============================*/


(define "global velocity"
	{speed (* 0.75 %gv)}			;// Global muzzle velocity scale for all weapons in "gun" folder.
)

(define "velocity"					;// used in gun file when muzzle velocity is same across all ammo types.
	("global velocity" gv(%mps))
)
(define "velocity m/s"				;// used in gun file when muzzle velocity varies across ammo types.

	("global velocity" gv(%he))		;// stops crash for on AI aim calculations

	{parameters "ap"		("global velocity" gv(%ap))}
	{parameters "apc"		("global velocity" gv(%ap))}
	{parameters "apche"		("global velocity" gv(%ap))}
	{parameters "aphe"		("global velocity" gv(%ap))}
	{parameters "apbc"		("global velocity" gv(%ap))}
	{parameters "apcbc"		("global velocity" gv(%ap))}
	{parameters "apcbche"	("global velocity" gv(%ap))}
	{parameters "aphebc"	("global velocity" gv(%ap))}
	{parameters "aphebc2"	("global velocity" gv(%ap))}

	{parameters "apcr"		("global velocity" gv(%apcr))}
	{parameters "hvap"		("global velocity" gv(%apcr))}
	{parameters "apds"		("global velocity" gv(%apcr))}

	{parameters "he"		("global velocity" gv(%he))}
	{parameters "sm"		("global velocity" gv(%he))}
	{parameters "wp"		("global velocity" gv(%he))}

	{parameters "heat"		("global velocity" gv(%heat))}
	{parameters "heata"		("global velocity" gv(%heat))}
	{parameters "heatb"		("global velocity" gv(%heat))}
	{parameters "heatc"		("global velocity" gv(%heat))}
	{parameters "atgm"		("global velocity" gv(%heat))}
)


;/*============================== Rate of Fire ==============================*/


(define "fire rate"			;//rate of fire in rounds per minute 
	{recoveryTime (/ 60 %rpm)}
)

(define "reload time"		;//reload time for magazine or shell
	{rechargeTime %seconds}
)


;/*============================== Damages ==============================*/

(define "shell_data_215"
	{parameters "%shell" ;// for units with higher range than 215, polynomial curve to simulate closer range engagements
		{projectileDamageTable {20 %a} {100 %b} {165 %c} {215 %d} {%range (+ (* (/ (- 250 %range) (- 250 215)) (- %d %e)) %e)} {(+ %range 20) 0} }
		{range %range %range}
	}
)
(define "shell_data_165"
	{parameters "%shell" ;// for units with higher range than 165 and lower 215, polynomial curve to simulate closer range engagements
		{projectileDamageTable {20 %a} {100 %b} {165 %c} {%range (+ (* (/ (- 215 %range) (- 215 165)) (- %c %d)) %d)} {(+ %range 20) 0} }
		{range %range %range}
	}
)
(define "shell_data_100"
	{parameters "%shell" ;// for units with higher range than 100 and lower than 165, polynomial curve to simulate closer range engagements
		{projectileDamageTable {20 %a} {100 %b} {%range (+ (* (/ (- 165 %range) (- 165 100)) (- %b %c)) %c)} {(+ %range 20) 0} }
		{range %range %range}
	}
)
(define "penetration"  ;// penetration drop curve with decreasing penetration after 250m (2km IRL, 1/8th Scale)
	{projectileDamageTable {12.5 %a} {62.5 %b} {125 %c} {187.5 %d} {250 %e} {500 (- %e (* 5 (- %a %e)))}} ;// shell penetration over distance
	
	
	{## (* -0.1 %a) (* 0.1 %a) 1} ;// adds variance to shell penetration
	{## ;// relative armor thickness / penetration ratio , penetration probability
		1.136	0
		1.124	1
		1.099	1
		1.087	2
		1.075	4
		1.064	7
		1.053	11
		1.042	16
		1.031	23
		1.020	31
		1.010	40
		1.000	50
		0.990	60
		0.980	69
		0.971	77
		0.962	84
		0.952	89
		0.943	93
		0.935	96
		0.926	98
		0.917	99
		0.901	99
		0.893	100
	}
)

(define "apfsds_short_rod_multiplier" ;for early short rod APFSDS Projectiles with negative normalization
    {overmatchFixed            ; values based on 105mm M735 in WT
        {0  1.00    }
        {5    1.002    }
        {10    1.013    }
        {15    1.033    }
        {20    1.066    }
        {25    1.1    }    ; DONE
        {30    1.288    }; set value
        {35    1.373    }
        {40    1.466    }
        {45    1.553    }
        {50    1.666    }
        {55    1.866    }
        {56    1.933    }    ;random to have more accurate performance on high angles
        {57    1.97    }    ;needs rechecking this one
        {58    2    }
        {59    2.06    }    ;needs rechecking this one
        {60    2.126    };set value    , over 2 -> negative normalization
        {61    2.2    }
        {62    2.33    }
        {63    2.4    }
        {64    2.433    }
        {65    2.513    }
        {66    2.6    }
        {67    2.7    }
        {68    2.8    }
        {69    2.9    }
        {70    3.1    }
        {71    3.266    }
        {72    3.433    }
        {73    3.566    }
        {74    3.766    }
        {75    4.13    }
        {76    4.33    }
        {77    4.733    }
        {78    4.94    }
        {79    5.33    }    ; temporary fix (shot pretty much guarantee richochet ~80%)
        {80    99    }    ;autorichochet angle
        {85    99    }
        {90 99        }
    }
)

(define "armor health"

	{minimumDamageModifier (* 1.0 %damage)} ;// In case only generic value is called

	{parameters "ap" 		{minimumDamageModifier (* 1.00 %damage)}}
	{parameters "apc" 		{minimumDamageModifier (* 1.00 %damage)}}
	{parameters "apche" 	{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "aphe" 		{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "apbc" 		{minimumDamageModifier (* 1.00 %damage)}}
	{parameters "apcbc" 	{minimumDamageModifier (* 1.00 %damage)}}
	{parameters "apcbche" 	{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "aphebc" 	{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "aphebc2" 	{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "apcr" 		{minimumDamageModifier (* 0.75 %damage)}}
	{parameters "hvap" 		{minimumDamageModifier (* 0.75 %damage)}}
	{parameters "apds" 		{minimumDamageModifier (* 0.75 %damage)}}
	{parameters "heat" 		{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "heata" 	{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "heatb" 	{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "heatc" 	{minimumDamageModifier (* 1.25 %damage)}}
	{parameters "atgm" 		{minimumDamageModifier (* 1.25 %damage)}}
	;// HE, WP, SM not included as they have no penetration power modelled.
)
(define "armor health custom" ;// 0-400g TNT filler
	{parameters "%shell" 	{minimumDamageModifier (+ %damage (* %filler (- 1 (/ %filler 400))))}}
)
(define "armor health custom_400" ;// >400g TNT filler
	{parameters "%shell" 	{minimumDamageModifier (+ %damage (* %filler (- 1 (/ %filler 750))))}}
)
(define "armor health custom_2000" ;// >2000g TNT filler
	{parameters "%shell" 	{minimumDamageModifier (+ %damage (* %filler (- 1 (/ %filler 3000))))}}
)
(define "armor health custom_5000" ;// >5000g TNT filler
	{parameters "%shell" 	{minimumDamageModifier (+ %damage (* %filler (- 1 (/ %filler 6000))))}}
)


(define "human health"		;// Damage to human health
	{healthDamage (* 1 %damage)}
)



;/*============================== Accuracies ==============================*/

(define "accuracy_indirect_200m"
	("curve_indirect_200m" r1(%r1) r2(%r2) range_ap(%range_ap) range_he(%range_he) range_heat(%range_heat) r0(1.02)) ; // r0(1.54) with manualaccuracy at 1.5, now r0(1.02) with manualaccuracy at 1.00 (same result in DC)
)
(define "curve_indirect_200m"	;// for indirect units with more than 200m range
	{parameters "ap"
		("standard_firing_arc")				;//																																		0,8* -8,75 = -7 + 15 = 8 | 8 * %r1 = accuracy at 223m
		{spreading 							;//calulation explaination with result, example range is 220m 					220 +3m	= 223					((= 80)		/	(= 100) = 0,8)	(= -8,75)			;//this part says accuracy should be 20 at 230m
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {200 (* 6.25 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.25 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "apc"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {200 (* 6.40 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.40 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "apche"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {200 (* 6.40 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.40 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "aphe"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {200 (* 6.25 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.25 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "apbc"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "apcbc"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "apcbche"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "aphebc"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "aphebc2"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "apcr"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 6.75 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.75 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "hvap"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 6.75 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.75 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 20}}
		}
	}
	{parameters "apds"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.80 (* %r1 %r0))} {150 (* 4.20 (* %r1 %r0))} {200 (* 8.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 8.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 30}}
		}
	}
	{parameters "he"
		{spreading
			{radiusTable {0 0} {50 (* 0.20 (* %r2 %r0))} {80 (* 0.5 (* %r2 %r0))} {120 (* 1.00 (* %r2 %r0))} {200 (* 2.50 (* %r2 %r0))} {300 (* 4 (* %r2 %r0))} {(- %range_he 0.1) (* (+ (* (/ (- 500 %range_he) (- 500 300)) (- 8 15)) 8) (* %r2 %r0))} {%range_he 100}}
		}
	}
	{parameters "sm"
		{spreading
			{radiusTable {0 0} {50 (* 0.20 (* %r2 %r0))} {80 (* 0.5 (* %r2 %r0))} {120 (* 1.00 (* %r2 %r0))} {200 (* 2.50 (* %r2 %r0))} {300 (* 4 (* %r2 %r0))} {500 (* 7 (* %r2 %r0))}}
		}
	}
	{parameters "wp"
		{spreading
			{radiusTable {0 0} {50 (* 0.20 (* %r2 %r0))} {80 (* 0.5 (* %r2 %r0))} {120 (* 1.00 (* %r2 %r0))} {200 (* 2.50 (* %r2 %r0))} {300 (* 4 (* %r2 %r0))} {500 (* 7 (* %r2 %r0))}}
		}
	}
	{parameters "ic"
		{spreading
			{radiusTable {0 0} {50 (* 0.20 (* %r2 %r0))} {80 (* 0.5 (* %r2 %r0))} {120 (* 1.00 (* %r2 %r0))} {200 (* 2.50 (* %r2 %r0))} {300 (* 4 (* %r2 %r0))} {500 (* 7 (* %r2 %r0))}}
		}
	}
	{parameters "heat"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
	{parameters "heata"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
	{parameters "heatb"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
	{parameters "heatc"
		("standard_firing_arc")
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
)

(define "accuracy_direct_200m"
	("curve_direct_200m" r1(%r1) range_ap(%range_ap) range_he(%range_he) range_heat(%range_heat) r0(1.02))
)
(define "curve_direct_200m"	;// for units with more than 200m range
	{parameters "ap"						;//																																		0,8* -8,75 = -7 + 15 = 8 | 8 * %r1 = accuracy at 223m
		{spreading 							;//calulation explaination with result, example range is 220m 					220 +3m	= 223					((= 80)		/	(= 100) = 0,8)	(= -8,75)			;//this part says accuracy should be 20 at 230m
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {200 (* 6.25 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.25 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apc"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {200 (* 6.40 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.40 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apche"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {200 (* 6.40 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.40 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphe"
		{spreading
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {200 (* 6.25 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.25 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbche"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc2"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcr"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 6.75 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.75 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "hvap"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 6.75 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.75 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apds"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.80 (* %r1 %r0))} {150 (* 4.20 (* %r1 %r0))} {200 (* 8.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 8.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 15}}
		}
	}
	{parameters "he"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_he 10) 30} {(+ %range_he 20) 100}}
		}
	}
	{parameters "sm"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_he 10) 30} {(+ %range_he 20) 100}}
		}
	}
	{parameters "wp"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_he 10) 30} {(+ %range_he 20) 100}}
		}
	}
	{parameters "ic"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_he 10) 30} {(+ %range_he 20) 100}}
		}
	}
	{parameters "heat"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 100}}
		}
	}
	{parameters "heata"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 100}}
		}
	}
	{parameters "heatb"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 100}}
		}
	}
	{parameters "heatc"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 100}}
		}
	}
	
)

(define "accuracy_direct_200m_how"
	("curve_direct_200m" r1(%r1) range_ap(%range_ap) range_he(%range_he) range_heat(%range_heat) r0(1.02))
)
(define "curve_direct_200m_how"	;// for units with more than 200m range; direct howitzers
	{parameters "ap"						;//																																		0,8* -8,75 = -7 + 15 = 8 | 8 * %r1 = accuracy at 223m
		{spreading 							;//calulation explaination with result, example range is 220m 					220 +3m	= 223					((= 80)		/	(= 100) = 0,8)	(= -8,75)			;//this part says accuracy should be 20 at 230m
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {200 (* 6.25 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.25 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apc"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {200 (* 6.40 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.40 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apche"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {200 (* 6.40 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.40 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphe"
		{spreading
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {200 (* 6.25 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.25 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbche"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc2"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {200 (* 6.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcr"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 6.75 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.75 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "hvap"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 6.75 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 6.75 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apds"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.80 (* %r1 %r0))} {150 (* 4.20 (* %r1 %r0))} {200 (* 8.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 300 %range_ap) (- 300 200)) (- 8.00 15)) 15) (* %r1 %r0))} {(+ %range_ap 10) 15}}
		}
	}
	{parameters "he"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(- %range_he 0.01) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {%range_he 100}}
		}
	}
	{parameters "sm"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_he 10) 30} {(+ %range_he 20) 80}}
		}
	}
	{parameters "wp"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_he 10) 30} {(+ %range_he 20) 80}}
		}
	}
	{parameters "ic"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 300 %range_he) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_he 10) 30} {(+ %range_he 20) 80}}
		}
	}
	{parameters "heat"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
	{parameters "heata"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
	{parameters "heatb"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
	{parameters "heatc"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {200 (* 7.50 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 300 %range_heat) (- 300 200)) (- 7.50 15)) 15) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 80}}
		}
	}
)

(define "accuracy_direct_150m"
	("curve_direct_150m" r1(%r1) range_ap(%range_ap) range_he(%range_he) range_heat(%range_heat) r0(1.02))
)
(define "curve_direct_150m"	;// for units with more than 150m, but less than 200m range
	{parameters "ap"
		{spreading 
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.70 6.25)) 6.25) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apc"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.80 6.40)) 6.40) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apche"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.80 6.40)) 6.40) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphe"
		{spreading
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.70 6.25)) 6.25) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbche"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc2"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcr"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.00 6.75)) 6.75) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "hvap"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.00 6.75)) 6.75) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apds"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.80 (* %r1 %r0))} {150 (* 4.20 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.20 8.00)) 8.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "he"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 80}}
		}
	}
	{parameters "sm"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 80}}
		}
	}
	{parameters "wp"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 80}}
		}
	}
	{parameters "ic"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 80}}
		}
	}
	{parameters "heat"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
	{parameters "heata"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
	{parameters "heatb"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
	{parameters "heatc"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
)

(define "accuracy_direct_150m_how"
	("curve_direct_150m_how" r1(%r1) range_ap(%range_ap) range_he(%range_he) range_heat(%range_heat) r0(1.02))
)
(define "curve_direct_150m_how"	;// for units with more than 150m, but less than 200m range; direct howitzers
	{parameters "ap"
		{spreading 
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.70 6.25)) 6.25) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apc"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.80 6.40)) 6.40) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apche"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.80 6.40)) 6.40) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphe"
		{spreading
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.70 6.25)) 6.25) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbche"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc2"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcr"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.00 6.75)) 6.75) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "hvap"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.00 6.75)) 6.75) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apds"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.80 (* %r1 %r0))} {150 (* 4.20 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.20 8.00)) 8.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "he"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(- %range_he 0.01) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {%range_he 100}}
		}
	}
	{parameters "sm"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 80}}
		}
	}
	{parameters "wp"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 80}}
		}
	}
	{parameters "ic"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 80}}
		}
	}
	{parameters "heat"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
	{parameters "heata"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
	{parameters "heatb"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
	{parameters "heatc"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_heat 3) (* (+ (* (/ (- 200 %range_heat) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_heat 10) 30} {(+ %range_heat 20) 30} {(+ %range_heat 30) 80}}
		}
	}
)

(define "accuracy_aa_150m"
	("curve_aa_150m" r1(%r1) range_ap(%range_ap) range_he(%range_he) range_heat(%range_heat) r0(1.02))
)
(define "curve_aa_150m"	;// for units with more than 150m, but less than 200m range
	{parameters "ap"
		{spreading 
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.70 6.25)) 6.25) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apc"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.80 6.40)) 6.40) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apche"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.90 (* %r1 %r0))} {120 (* 2.55 (* %r1 %r0))} {150 (* 3.80 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.80 6.40)) 6.40) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphe"
		{spreading
			{radiusTable {0 0} {50 (* 0.65 (* %r1 %r0))} {80 (* 1.80 (* %r1 %r0))} {120 (* 2.45 (* %r1 %r0))} {150 (* 3.70 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.70 6.25)) 6.25) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcbche"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "aphebc2"
		{spreading
			{radiusTable {0 0} {50 (* 0.60 (* %r1 %r0))} {80 (* 1.70 (* %r1 %r0))} {120 (* 2.30 (* %r1 %r0))} {150 (* 3.50 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 3.50 6.00)) 6.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apcr"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.00 6.75)) 6.75) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "hvap"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 1.95 (* %r1 %r0))} {120 (* 2.65 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.00 6.75)) 6.75) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "apds"
		{spreading
			{radiusTable {0 0} {50 (* 0.70 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.80 (* %r1 %r0))} {150 (* 4.20 (* %r1 %r0))} {(+ %range_ap 3) (* (+ (* (/ (- 200 %range_ap) (- 200 150)) (- 4.20 8.00)) 8.00) (* %r1 %r0))} {(+ %range_ap 10) 10}}
		}
	}
	{parameters "he"
		{spreading
			{radiusTable {0 0} {50 (* 0.80 (* %r1 %r0))} {80 (* 2.00 (* %r1 %r0))} {120 (* 2.70 (* %r1 %r0))} {150 (* 4.00 (* %r1 %r0))} {(+ %range_he 3) (* (+ (* (/ (- 200 %range_he) (- 200 150)) (- 4.00 7.50)) 7.50) (* %r1 %r0))} {(+ %range_he 10) 10}}
		}
	}
)

;/*============================== RANGES AND SPECIFICS ==============================*/


(define "standard_firing_arc"
	{gravity 3.5}
)
(define "curved_firing_arc"
	{gravity 4.5}
)
(define "artillery_firing_arc"
	{gravity 5.5}
)

(define "anti-aircratft"
	{tag "aa"}
)

(define "light_aa"
	("anti-aircratft" range(250) spread(3))
	{AimingTolerance 12}
)

(define "medium_aa"
	("anti-aircratft" range(300) spread(2.25))
	{AimingTolerance 12}
)

(define "heavy_aa"
	("anti-aircratft" range(400) spread(1.5))
	{AimingTolerance 5}
)

(define "range_aircraft_gun"
	("standard_firing_arc")
	{range 275 500}
	{automatic}

	{aimingTolerance 15}
	{SpreadTolerance 0}			;// Zeroing up to 0% needed before fire
	{spreading
		{SpreadPower 1}
		{BurstRecoveryTime 0.5}
		{BurstAccuracy 100 95 90 85 80}
		{SpreadXYRatio	1}
		{radiusTable {0 1} {200 2} {300 5} {350 12}}
	}

	{burst
		{short 20 5}			;// short burst shots on long distance, rand (+-)shots
		{long 50 10}			;// long burst shots on short distance, rand (+-)shots
		{rangeKoef 0.75}		;// rangeKoef * aimRange = max long burst distance
	}
	{SyncedProjectiles 0}		;// not for automatic weapons
)

(define "range_autocannon_12-20"
	("standard_firing_arc")
	{range 160 160}
	{automatic}
	{aimingTolerance 3}
	{SpreadTolerance 0}			;// Zeroing up to 0% needed before fire
	{spreading
		{BurstRecoveryTime 0.5}
		{BurstAccuracy 100 98 95 90 85 80 75 70}
		{SpreadXYRatio	0.5}
	}

	{burst
		{short 2 0.75}			;// short burst shots on long distance, rand (+-)shots
		{long 5 1}				;// long burst shots on short distance, rand (+-)shots
		{rangeKoef 0.5}			;// rangeKoef * aimRange = max long burst distance
	}
	{SyncedProjectiles 0}		;// not for automatic weapons
)


(define "range_autocannon_37-40"
	("standard_firing_arc")
	{range 170 170}
	{automatic}
	{aimingTolerance 3}
	{SpreadTolerance 0}			;// Zeroing up to 0% needed before fire
	{spreading
		{BurstRecoveryTime 0.5}
		{BurstAccuracy 100 95 88 82 75 68 55 32}
		{SpreadXYRatio	0.5}
	}

	{burst
		{short 2 0.75}			;// short burst shots on long distance, rand (+-)shots
		{long 5 1}				;// long burst shots on short distance, rand (+-)shots
		{rangeKoef 0.85}		;// rangeKoef * aimRange = max long burst distance
	}
	{SyncedProjectiles 0}		;// not for automatic weapons
)

(define "range_autocannon_41-57"
	("standard_firing_arc")
	{range 200 200}
	{automatic}
	{aimingTolerance 3}
	{SpreadTolerance 0}			;// Zeroing up to 0% needed before fire
	{spreading
		{BurstRecoveryTime 0.5}
		{BurstAccuracy 100 92 85 79 72 65 52 29}
		{SpreadXYRatio	0.5}
	}

	{burst
		{short 2 0.75}			;// short burst shots on long distance, rand (+-)shots
		{long 4 1}				;// long burst shots on short distance, rand (+-)shots
		{rangeKoef 0.85}		;// rangeKoef * aimRange = max long burst distance
	}
	{SyncedProjectiles 0}		;// not for automatic weapons
)

(define "range_170"
	("standard_firing_arc")
	{range 170 170}
	{SpreadTolerance 0.60}		;// Zeroing up to 60% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_180"
	("standard_firing_arc")
	{range 180 180}
	{SpreadTolerance 0.60}		;// Zeroing up to 60% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_190"
	("standard_firing_arc")
	{range 190 190}
	{SpreadTolerance 0.60}		;// Zeroing up to 60% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_200"
	("standard_firing_arc")
	{range 200 200}
	{SpreadTolerance 0.60}		;// Zeroing up to 60% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_210"
	("standard_firing_arc")
	{range 210 210}
	{SpreadTolerance 0.60}		;// Zeroing up to 60% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_220"
	("standard_firing_arc")
	{range 220 220}
	{SpreadTolerance 0.60}		;// Zeroing up to 60% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_230"
	("standard_firing_arc")
	{range 230 230}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_240"
	("standard_firing_arc")
	{range 240 240}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_250"
	("standard_firing_arc")
	{range 250 250}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_260"
	("standard_firing_arc")
	{range 260 260}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_270"
	("standard_firing_arc")
	{range 270 270}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_280"
	("standard_firing_arc")
	{range 280 280}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_290"
	("standard_firing_arc")
	{range 290 290}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)
(define "range_300"
	("standard_firing_arc")
	{range 300 300}
	{SpreadTolerance 0.65}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 0.4}}
)

(define "range_170_howitzer"
	("curved_firing_arc")
	{range 170 170}
	{SpreadTolerance 0.75}		;// Zeroing up to 75% needed before fire
	{ZeroingAccuracy 0.9 0.85 0.8 0.75 0.70 0.65 0.60 0.55 0.50}
	{spreading {SpreadXYRatio 3}}
)
(define "range_180_howitzer"
	("curved_firing_arc")
	{range 180 180}
	{SpreadTolerance 0.75}		;// Zeroing up to 75% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 3}}
)
(define "range_190_howitzer"
	("curved_firing_arc")
	{range 190 190}
	{SpreadTolerance 0.75}		;// Zeroing up to 75% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 3}}
)
(define "range_200_howitzer"
	("curved_firing_arc")
	{range 200 200}
	{SpreadTolerance 0.75}		;// Zeroing up to 75% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 3}}
)
(define "range_210_howitzer"
	("curved_firing_arc")
	{range 210 210}
	{SpreadTolerance 0.75}		;// Zeroing up to 75% needed before fire
	{ZeroingAccuracy 0.8 0.65 0.55 0.5 0.45}
	{spreading {SpreadXYRatio 3}}
)

(define "range_atgm"
	("standard_firing_arc")
	{range 390 400}
	{minRange 50}
	{SpreadTolerance 0.4}		;// Zeroing up to 65% needed before fire
	{ZeroingAccuracy 0.75 0.5}
	{spreading {SpreadPower 1}}
)

(define "medium_artillery"
    {spreading 1 {SpreadPower 1.25}}
	{range 400 400}
	{ZeroingAccuracy 0.75 0.65 0.55 0.50 0.45 0.40 0.35 0.33 0.31 0.29 0.27 0.25 0.24 0.23 0.22 0.21 0.20}
	("artillery_firing_arc")
	{speed 165}
	{SpreadTolerance 0.85}		;// Zeroing up to 85% needed before fire
	{DisableRicochet}
	{traceFreq 0}
    {unlimitedRangeTPC 0}   ;// restrict range in TPC/FPC
)

(define "heavy_artillery"
    {spreading 1 {SpreadPower 1.25}}
	{range 500 500}
	{ZeroingAccuracy 0.70 0.50 0.40 0.35 0.33 0.31 0.29 0.27 0.25 0.24 0.23 0.22 0.21 0.20}
	("artillery_firing_arc")
	{speed 165}
	{SpreadTolerance 0.85}		;// Zeroing up to 85% needed before fire
	{DisableRicochet}
	{traceFreq 0}
    {unlimitedRangeTPC 0}   ;// restrict range in TPC/FPC
)

(define "super_heavy_artillery"
    {spreading 1 {SpreadPower 1.25}}
	{range 600 600}
	{ZeroingAccuracy 0.70 0.50 0.40 0.30 0.25 0.24 0.23 0.22 0.21 0.20}
	("artillery_firing_arc")
	{speed 165}
	{SpreadTolerance 0.85}		;// Zeroing up to 85% needed before fire
	{DisableRicochet}
	{traceFreq 0}
    {unlimitedRangeTPC 0}   ;// restrict range in TPC/FPC
)


;/*============================== Slope Multipliers ==============================*/


(define "ap_slope_multiplier" ;use for AP and for any other Projectiles not specifically defined below
	{overmatchCalibre
		{0		0.1			0.0637	}
		{5		0.96297		0.0637	}
		{10		0.98297		0.0637	}
		{15		1.00066		0.0969	}
		{20		1.0361		0.13561	}
		{25		1.1116		0.16164	}
		{30		1.2195		0.19702	}
		{35		1.3771		0.22546	}
		{40		1.6263		0.26313	}
		{45		2.0033		0.34717	}
		{50		2.6447		0.57353	}
		{55		3.231		0.69075	}
		{60		4.0708		0.81826	}
		{65		6.2655		0.9192	}
		{70		8.6492		1.00539	}
		{75		13.7512		1.074	}
		{80		21.8713		1.17973	}
		{85		34.4862		1.28631	}
		{90		99.0000		0.00000	}
	}
)

(define "apc_slope_multiplier" ;use for APC & APCBC Projectiles
	{overmatchCalibre
		{0		0.1			0.0225	}
		{5		1.0000		0.0225	}
		{10		1.0243		0.0225	}
		{15		1.0532		0.0327	}
		{20		1.1039		0.0454	}
		{25		1.1741		0.0549	}
		{30		1.2667		0.0655	}
		{35		1.3925		0.0993	}
		{40		1.5642		0.1388	}
		{45		1.7933		0.1655	}
		{50		2.1053		0.2035	}
		{55		2.5368		0.2427	}
		{60		3.0796		0.245	}
		{65		4.0041		0.3354	}
		{70		5.0803		0.3478	}
		{75		6.7445		0.3831	}
		{80		9.0598		0.4131	}
		{85		12.8207		0.455	}
		{90		99.0000		0.0000	}
	}
)

(define "apbc_slope_multiplier" ;use for apbc Projectiles
	{overmatchCalibre
		{0		1.0			0.15	} ;//has worse performance against flat armor unless it overmatches
		{5		1.02		0.15	}
		{10		1.039		0.15	}
		{15		1.055		0.15	}
		{20		1.077		0.15	}
		{25		1.108		0.15	}
		{30		1.1585		0.15	}
		{35		1.2669		0.15	}
		{40		1.4474		0.16952	}
		{45		1.7028		0.24604	}
		{50		2.3008		0.3791	}
		{55		2.8917		0.56444	}
		{60		3.8672		1.07411	}
		{65		5.335		1.46188	}
		{70		9.477		1.8152	}
		{75		20.22		2.19155	}
		{80		56.2		2.5621	}
		{85		221.3		2.93265	}
		{90		99.0000		0.0000	}
	}
)

(define "apbc_slope_multiplier_original"  ;for USSR APBC & APHEBC Projectiles
	{overmatchCalibre
		{0		0.1			0.01555	}
		{5		1.02		0.01555	}
		{10		1.039		0.01555	}
		{15		1.055		0.02315	}
		{20		1.077		0.03448	}
		{25		1.108		0.05134	}
		{30		1.155		0.0771	}
		{35		1.217		0.11384	}
		{40		1.313		0.16952	}
		{45		1.441		0.24604	}
		{50		1.682		0.3791	}
		{55		2.11		0.56444	}
		{60		3.497		1.07411	}
		{65		5.335		1.46188	}
		{70		9.477		1.46188	} ;//{70	1.8152	}
		{75		20.22		1.074	} ;//{75	2.19155	}
		{80		56.2		1.17973	} ;//{80	2.5621	}
		{85		221.3		1.28631	} ;//{85	2.93265	}
		{90		99.000		0.00000	}
	}
)

(define "apcr_slope_multiplier"  ;use for APCR & HVAP Projectiles 76mm Caliber or below
	{overmatchFixed
		{0  1.00	}
		{10	1.01	}
		{10	1.03	}
		{15	1.07	}
		{20	1.13	}
		{25	1.23	}
		{30	1.36	}
		{35	1.59	}
		{40	1.90	}
		{45	2.28	}
		{50	2.78	}
		{55	3.41	}
		{60	4.23	}
		{65	5.29	}
		{70	6.69	}
		{75	8.52	}
		{80	10.93	}
		{85	14.15	}
		{90 99		}
	}
)

(define "large_apcr_slope_multiplier"  ;use for APCR & HVAP Projectiles above 76mm Caliber
	{overmatchFixed
		{0  1.00	}
		{5	1.01	}
		{10	1.04	}
		{15	1.08	}
		{20	1.13	}
		{25	1.20	}
		{30	1.29	}
		{35	1.48	}
		{40	1.76	}
		{45	2.14	}
		{50	2.68	}
		{55	3.45	}
		{60	4.58	}
		{65	6.26	}
		{70	8.82	}
		{75	12.81	}
		{80	19.19	}
		{85	29.67	}
		{90 99		}
	}
)

(define "apds_slope_multiplier"  ;for APDS Projectiles
	{overmatchFixed
		{0  1.00	}
		{5	1.002	}
		{10	1.01	}
		{15	1.03	}
		{20	1.08	}
		{25	1.14	}
		{30	1.23	}
		{35	1.37	}
		{40	1.55	}
		{45	1.82	}
		{50	2.20	}
		{55	2.74	}
		{60	3.54	}
		{65	4.74	}
		{70	6.61	}
		{75	9.57	}
		{80	14.46	}
		{85	22.82	}
		{90 99		}
	}
)

(define "heat_slope_multiplier"  ;for HEAT Projectiles & Bazooka Class Weapons
	{overmatchSlope
		{0  1}
		{90 1}
	}
)